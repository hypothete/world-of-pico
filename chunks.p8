pico-8 cartridge // http://www.pico-8.com
version 15
__lua__
--map and objects

actions={}
objects={}

m={
	w=16,
	h=32,
	data={
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	}
}

m.spr=function(n)
	--returns sprite index
	return n+16
end

m.set=function()
	local ct=0
	for y=0,m.h-1 do
		for x=0,m.w-1 do
			local s=m.spr(m.data[ct+1])
			mset(x,y,s)
			ct+=1
		end
	end
end
-->8
--player

p={
 x=32,
 y=32,
 d=2, --direction nesw
 moving=false,
 btim=0, --btn timer
 bdwn=-1 --btn down
}

p.draw=function()
	print(p.x/8, 8, 8)
	print(p.y/8, 24, 8)
	spr(p.d+1,p.x,p.y)
end

p.step=function(x,y)
	local c=cocreate(function()
			p.moving=true
			for i=1,8 do
				p.x+=x
				p.y+=y
				yield()
			end
			p.moving=false
	end)
	add(actions, c)
end

p.btnp=function(k)
	--button hold mechanic
	if p.bdwn==k then
		if k==-1 then
			return false
		end
		p.btim+=1
		if p.btim<10 then
			return false
		else
			return true
		end
	else
		if p.bdwn==-1 then
			p.btim=0
		end
		p.bdwn=k
		return false
	end
end

p.solid=function(dx,dy)
	--check map if solid
	--cell xy rel to player
	local qx=p.x/8+dx
	local qy=p.y/8+dy
	local ms=mget(qx,qy)
	return fget(ms,0)
	--todo: extend for water
end

p.move=function()
	if p.moving then
		return
	end
	local press=-1
	local dx=0
	local dy=0
	if btn(0) then
		p.d=3
		press=0
		dx=-1
	elseif btn(1) then
		p.d=1
		press=1
		dx=1
	elseif btn(2) then
		p.d=0
		press=2
		dy=-1
	elseif btn(3) then
		p.d=2
		press=3
		dy=1
	end
	--look if tapped,
	--walk if held
	local dstep=p.btnp(press)
	if dstep then
		--check for solid
		local sld=p.solid(dx,dy)
		if not sld then
			p.step(dx,dy)
		end
	end

end
-->8
--camera

cam={
	x=0,
	y=0
}

cam.move=function()
	cam.x=p.x-56
	cam.y=p.y-56
	if cam.x<0 then
		cam.x=0
	end
	if cam.y<0 then
		cam.y=0
	end
	if cam.x>m.w*8-128 then
		cam.x=m.w*8-128
	end
	if cam.y>m.h*8-128 then
		cam.y=m.h*8-128
	end
	camera(cam.x,cam.y)
end

cam.draw=function()
	map(0,0,0,0)
	p.draw()
end

cam.sees=function(o)
	return o.x>cam.x and
		o.x<=cam.x+128 and
		o.y>cam.y and
		o.y<=cam.y+128
end
-->8
--main

function _init()
	m.set()
end

function _update()
	p.move()
	for c in all(actions) do
		if costatus(c) then
			coresume(c)
		else
			del(actions, c)
		end
	end
	cam.move()
end

function _draw()
	cls()
 cam.draw()
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000006666000066660000666600006666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700006666000066610000166100001666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000006666000066660000666600006666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000660000006600000066000000660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000660000006600000066000000660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000660000006600000066000000660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000660000006600000066000000660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333fff6ffff5555555511111111f44444441111111100000000000000000000000000000000000000000000000000000000000000000000000000000000
333333336fffffff56555565111111114f44444f1222222100099900000999000009990000099900000999000009900000099900000990000009990000099900
33333333fffff6ff5555555511111111444444441222222100090000000009000009090000090900000909000009090000090000000909000009000000090000
33333333ff6ffff65555555511111111444444f41222222100099900000009000009990000099900000999000009900000090000000909000009900000099000
33333333ffffffff555555551111111144444f4f1222292100090900000090000009090000000900000909000009090000090000000909000009000000090000
33333333fffff6ff555555551111111144f444441222242100099900000090000009990000000900000909000009990000099900000999000009990000090000
33333333ff6fffff56555565111111114f4f44441222222100000000000000000000000000000000000000000000000000000000000000000000000000000000
333333336fff6fff5555555511111111444444441222222100000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0100000000000000000000000000000000000102010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
